#include "external_sort.h"

ExternalSort::ExternalSort(char* input_filname, char* output_filename, long long size_of_data, long long size_of_memory) {
	this->input_filename = input_filename;				// input filename
	this->output_filename = output_filename;			// output filename
	this->size_of_data = size_of_data;				// size of data in bytes
	this->size_of_memory = size_of_memory;				// size of memory in bytes

	this->number_count_of_data = this->size_of_data / sizeof(long long);	
	this->number_count_in_chunk = this->size_of_memory / sizeof(long long);  
	this->number_of_chunks = (this->number_count_of_data + this->number_count_in_chunk - 1) / this->number_count_in_chunk;

	this->input_handler = open(input_filename, O_RDONLY);
	this->output_handler = open(output_filename, O_RDWR | O_CREAT, 0666);
}

void ExternalSort::sort() {
	size_t remaining = this->number_count_of_data;
	for (int i = 1; i <= this->number_of_chunks; ++i) {
		read_and_sort(i, i * this->number_count_in_chunk, std::min(this->number_count_in_chunk, remaining));
		remaining -= this->number_count_in_chunk;
	}  
	
	this->merge();
}

void ExternalSort::read_and_sort(int part, int offset, int limit) {
		
}

void ExternalSort::merge() {
}

void ExternalSort::verify() {
}


